# RVVI RISC-V Verification Interface
====================================


RVVI Specification
------------------
The following specification defines a method of controlling and observing a RISCV implementation, in
order to be observe internal state values, control the execution of instructions and apply input
events such as interrupts and debug requests.

The RVVI implements 2 interfaces 
RVVI-S - RISC-V Verification Interface - State
RVVI-C - RISC-V Verification Interface - Control


RVVI-S Interface
----------------
This interface provides internal visibility of the state of the RISC-V device.
It also provides a notifier event to indicate a change of state, following a control command
provided on the RVVI-C interface.
All signals on the RVVI-S Interface are outputs from the device, for observing state transitions and
state values

notify:
This is an event to indicate some change of state following the completion of a command on the
control interface. When the notify event is asserted the signals nret, valid, trap and halt indicate
the current state at this notification event point.
Following a notify event, the testbench can decide the next control command to be applied

valid:
When this signal is true at a notify event, an instruction has been successfully retired by the
device, and all internal state values will have been updated accordingly, this includes the GPR, 
FPR, CSR and any other supported registers

trap:
When this signal is true at a notify event, an instruction execution has undergone an exception for
some reason, this could include synchronous/asynchronous exception, or a debug request.
This event allows the reading of internal state, but also gives the opportunity to change the values
on input signals, prior to continuing to an instruction retirement.

halt:
When this signal is true at a notify event, it indicates that the hart has gone into a halted state

intr:
When this signal is true at a notify event, it indicates that this retired instruction is the first
instruction which is part of a trap handler.

order:
This signal contains the instruction count for the instruction being retired at the valid event

insn:
This signal contains the instruction word which is at the trap or valid event

mode:
This signal indicates the operating mode (Machine, Supervisor, User)

ixl:
This signal indicates the current XLEN for the given privilege mode of operation

decode:
This is a string containing the disassembled instruction at the time either the trap or valid notify
event occured.

pcr:
This is the address of the retired instruction at a valid notify event

pcw:
This is the address of the next instruction to be executed at a valid notify event

x, f, CSR:
These arrays contain the values of the registers for the INTEGER, FLOATING-POINT, and CONTROL/STATE

